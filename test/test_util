#!/usr/bin/env bats

# tests for lockss-installer utilities - lockss-installer/scripts/_util

load "${BATS_LIBEXEC}/../bats-support/load.bash"
load "${BATS_LIBEXEC}/../bats-assert/load.bash"

setup() {
  . ../scripts/_util
}

@test 'Get_Value' {
  assert_equal $(Get_Value foo=1) 1
}

@test 'valid_ip_address' {
  refute valid_ip_address ""
  assert valid_ip_address 1.1.1.1
  refute valid_ip_address 1.1.1
  refute valid_ip_address 1.1.1.d
  refute valid_ip_address 1.1.1.1.d
  refute valid_ip_address 1.2.3.4.5
  refute valid_ip_address 1.2.3.400
}

@test 'valid_ip_address_list' {
  refute valid_ip_address_list ""
  assert_equal ${#VALIDATED_LIST[@]} "0"
  assert valid_ip_address_list 1.1.1.1
  assert_equal ${VALIDATED_LIST[0]} "1.1.1.1"
  assert_equal ${#VALIDATED_LIST[@]} "1"
  refute valid_ip_address_list 1.1.1.d
  assert_equal ${#VALIDATED_LIST[@]} "0"
  assert valid_ip_address_list "1.1.1.1;2.3.4.56"
  # doesn't work, don't know why:
  # assert_equal ${VALIDATED_LIST[@]} "(1.1.1.1 2.3.4.56)"
  assert_equal ${VALIDATED_LIST[0]} "1.1.1.1"
  assert_equal ${VALIDATED_LIST[1]} "2.3.4.56"
  assert_equal ${#VALIDATED_LIST[@]} "2"
  assert valid_ip_address_list "1.1.1.1;2.3.4.56;10.0.0.1"
  assert_equal ${VALIDATED_LIST[0]} "1.1.1.1"
  assert_equal ${VALIDATED_LIST[1]} "2.3.4.56"
  assert_equal ${VALIDATED_LIST[2]} "10.0.0.1"
  assert_equal ${#VALIDATED_LIST[@]} "3"
  refute valid_ip_address_list "1.1.1.1 2.3.4.56;10.0.0.1"
  assert_equal ${#VALIDATED_LIST[@]} "0"
  refute valid_ip_address_list "1.1.1.1:2.3.4.56;10.0.0.1"
  refute valid_ip_address_list "1.1.1.1;2.3.4.56;10.0.0.256"
}

@test 'valid_subnet' {
  refute valid_subnet ""
  assert valid_subnet 1.2.3.4
  refute valid_subnet 1.2.3
  refute valid_subnet 1.2.3.4.5

  assert valid_subnet 1.1.1.0/24
  refute valid_subnet 1.1.1.0/33
  refute valid_subnet 1.1.1.0/123
  refute valid_subnet 1.1.1/24
  refute valid_subnet "1.1.1.1.1/24"
  refute valid_subnet 172.16.0.0/123
  refute valid_subnet "1.1.1.0/55"

  assert valid_subnet "10.*.*.*"
  assert valid_subnet "10.1.*.*"
  assert valid_subnet "10.1.1.*"
  refute valid_subnet "10.1.1.1.*"
  assert valid_subnet "10.1.1.*.*"
  assert valid_subnet "10.1.1.**"

  refute valid_subnet "1.1.1.0/24;1.2.3.4/31"
  refute valid_subnet "1.1.1.0/24:1.2.3.4/31"
}

@test 'valid_subnet_list' {
  refute valid_subnet_list ""
  assert_equal ${#VALIDATED_LIST[@]} "0"
  assert valid_subnet_list 10.1.1.0/24
  assert_equal ${VALIDATED_LIST[0]} "10.1.1.0/24"
  assert_equal ${#VALIDATED_LIST[@]} "1"
  assert valid_subnet_list "10.0.0.0/8;192.168.0.0/16"
  assert_equal ${VALIDATED_LIST[0]} "10.0.0.0/8"
  assert_equal ${VALIDATED_LIST[1]} "192.168.0.0/16"
  assert_equal ${#VALIDATED_LIST[@]} "2"
  assert valid_subnet_list "10.0.0.0/8;192.168.0.0/16;172.16.0.0/12"
  refute valid_subnet_list "10.0.0.0/8;192:168.0.0/16;172.16.0.0/123"
  assert_equal ${#VALIDATED_LIST[@]} "0"
  refute valid_subnet_list "10.0.0.0/8;192 168.0.0/16"
  refute valid_subnet_list "10.0.0.0/8;192.168.0.0/33"

  assert valid_subnet_list "1.1.1.*"
  assert_equal ${VALIDATED_LIST[0]} "1.1.1.*"
  assert_equal ${#VALIDATED_LIST[@]} "1"
  assert valid_subnet_list "10.0.0.0/8;1.1.*.*"
  assert_equal ${VALIDATED_LIST[0]} "10.0.0.0/8"
  assert_equal ${VALIDATED_LIST[1]} "1.1.*.*"
  assert_equal ${#VALIDATED_LIST[@]} "2"
  refute valid_subnet_list "10.0.0.0/8 1.1.*.*"

  refute valid_subnet_list "1.1.1.1.1/24"
  refute valid_subnet_list "1.1.1.0/55"
}

@test 'normalize_path' {
  local v=$(normalize_path /a/b/c)
  assert_equal "$v" "/a/b/c"
  local v=$(normalize_path /a/./b//d/../c/xx/..)
  assert_equal "$v" "/a/b/c/"
  local v=$(normalize_path a/b/..c/d/..)
  assert_equal "$v" "a/b/..c/"
}
