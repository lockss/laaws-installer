apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: lockss-configuration-service
  name: lockss-configuration-service
spec:
  ports:
  - name: "lockss-cfg-rest-port"
    port: {{CFG_REST_PORT}}
    targetPort: {{CFG_DEFAULT_REST_PORT}}
  - name: "lockss-cfg-ui-port"
    port: {{CFG_UI_PORT}}
    targetPort: {{CFG_DEFAULT_UI_PORT}}
  - name: "lockss-jms-port"
    port: {{JMS_PORT}}
    targetPort: {{JMS_DEFAULT_PORT}}
  - name: "lockss-ui-port"
    port: {{LOCKSS_UI_PORT}}
    targetPort: {{CFG_DEFAULT_UI_PORT}}
  selector:
    io.kompose.service: lockss-configuration-service
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: lockss-cfg-logs
  name: lockss-cfg-logs
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: lockss-cfg-data
  name: lockss-cfg-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lockss-cfg-deployment
  namespace: default
  labels:
    app: lockss-configuration-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lockss-configuration-service
  template:
    metadata:
      labels:
        app: lockss-configuration-service
        io.kompose.network/lockss-stack-network: "true"
        io.kompose.service: lockss-configuration-service
    spec:
      containers:
      - env:
        - name: ARGS_ADDITIONAL
          value: $(ARGS_ADDITIONAL)
        - name: LOCKSS_IS_CONFIG
          value: "true"
        - name: LOCKSS_PRESERVATION_GROUP
          value: {{LOCKSS_PRESERVATION_GROUP}}
        - name: LOCKSS_PROPS_URL
          value: {{LOCKSS_PROPS_URL}}
        - name: LOCKSS_WAIT_FOR_PORT
          value: {{POSTGRES_HOST}}:{{POSTGRES_DEFAULT_PORT}}
        - name: TZ
          value: {{LOCKSS_TIMEZONE}}
        volumeMounts:
        - mountPath: /run/secrets/lockss-postgres-pass
          name: lockss-postgres-pass
        - mountPath: /run/secrets/lockss-ui-pass
          name: lockss-ui-pass
        - mountPath: /run/secrets/lockss-auth
          name: lockss-auth
        - mountPath: /data
          name: lockss-cfg-data
        - mountPath: /var/log/lockss
          name: lockss-cfg-logs
        - mountPath: /run/configs/lockss_bootstrap
          name: lockss-bootstrap
        - mountPath: /run/configs/lockss_service
          name: cfg-service
        - mountPath: /run/configs/lockss_service_opt
          name: cfg-service-opt
        - mountPath: /run/configs/lockss_cluster
          name: lockss-cluster
        - mountPath: /run/configs/lockss_cluster_opt
          name: lockss-cluster-opt
        image: {{CFG_IMG}}:{{CFG_VERSION}}
        name: lockss-configuration-service
        ports:
        - containerPort: {{CFG_DEFAULT_REST_PORT}}
        - containerPort: {{CFG_DEFAULT_UI_PORT}}
        - containerPort: {{JMS_DEFAULT_PORT}}
      restartPolicy: OnFailure
      volumes:
        - name: lockss-postgres-pass
          secret:
            items:
            - key: lockss-postgres-pass
              path: lockss-postgres-pass
            secretName: lockss-postgres-pass
        - name: lockss-ui-pass
          secret:
            items:
            - key: lockss-ui-pass
              path: lockss-ui-pass
            secretName: lockss-ui-pass
        - name: lockss-auth
          secret:
            items:
            - key: lockss-auth
              path: lockss-auth
            secretName: lockss-auth
        - name: lockss-bootstrap
          hostPath:
            path: ./lockss_bootstrap
        - name: cfg-service
          hostPath:
            path: ./cfg-service
        - name: cfg-service-opt
          hostPath:
            path: ./cfg-service_opt
        - name: lockss-cluster
          hostPath:
            path: ./lockss-cluster
        - name: lockss-cluster-opt
          hostPath:
            path: ./lockss-cluster_opt
        - name: lockss-cfg-data
          persistentVolumeClaim:
            claimName: lockss-cfg-data
        - name: lockss-cfg-logs
          persistentVolumeClaim:
            claimName: lockss-cfg-logs
