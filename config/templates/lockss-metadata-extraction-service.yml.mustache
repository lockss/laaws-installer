apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: lockss-metadata-extraction-service
  name: lockss-metadata-extraction-service
spec:
  ports:
  - name: "lockss-mdx-service-rest-port"
    port: {{MDX_REST_PORT}}
    targetPort: {{MDX_DEFAULT_REST_PORT}}
  - name: "lockss-mdx-service-ui-port"
    port: {{MDX_UI_PORT}}
    targetPort: {{MDX_DEFAULT_UI_PORT}}
  selector:
    io.kompose.service: lockss-metadata-extraction-service
  externalTrafficPolicy: Local
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: lockss-metadata-extraction-service
  name: lockss-mdx-data-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: lockss-metadata-extraction-service
  name: lockss-mdx-logs-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: lockss-metadata-extraction-service
  name: lockss-metadata-extraction-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: lockss-metadata-extraction-service
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/lockss-stack-network: "true"
        io.kompose.service: lockss-metadata-extraction-service
    spec:
      containers:
      - env:
        - name: ARGS_ADDITIONAL
          value: $(ARGS_ADDITIONAL)
        - name: LOCKSS_ADMIN_USER
          value: {{LOCKSS_ADMIN_USER}}
        - name: LOCKSS_CONFIG_URL
          value: {{CFG_URL}}
        - name: LOCKSS_PRESERVATION_GROUP
          value: {{LOCKSS_PRESERVATION_GROUP}}
        - name: LOCKSS_WAIT_FOR_200
          value: "{{CFG_HOST}}:{{CFG_DEFAULT_REST_PORT}} {{REPO_HOST}}:{{REPO_DEFAULT_REST_PORT}}"
        - name: LOCKSS_WAIT_FOR_PORT
          value: "{{POSTGRES_HOST}}:{{POSTGRES_DEFAULT_PORT}} {{CFG_HOST}}:{{CFG_DEFAULT_REST_PORT}} {{REPO_HOST}}:{{REPO_DEFAULT_REST_PORT}}"
        - name: TZ
          value: {{LOCKSS_TIMEZONE}}
        image: "{{MDX_IMG}}:{{MDX_VERSION}}"
        name: lockss-metadata-extraction-service
        ports:
        - containerPort: {{MDX_DEFAULT_REST_PORT}}
        - containerPort: {{MDX_DEFAULT_UI_PORT}}
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets/lockss-postgres-pass
          name: lockss-postgres-pass
        - mountPath: /run/secrets/lockss-ui-pass
          name: lockss-ui-pass
        - mountPath: /data
          name: lockss-mdx-data
        - mountPath: /var/log/lockss
          name: lockss-mdx-logs
        - mountPath: /run/configs/lockss_bootstrap
          name: lockss-bootstrap
        - mountPath: /run/configs/lockss_service
          name: mdx-service
        - mountPath: /run/configs/lockss_service_opt
          name: mdx-service-opt
      restartPolicy: Always
      volumes:
      - name: lockss-postgres-pass
        secret:
          items:
          - key: lockss-postgres-pass
            path: lockss-postgres-pass
          secretName: lockss-postgres-pass
      - name: lockss-ui-pass
        secret:
          items:
          - key: lockss-ui-pass
            path: lockss-ui-pass
          secretName: lockss-ui-pass
      - name: lockss-bootstrap
        hostPath:
          path: ./lockss_bootstrap
      - name: mdx-service
        hostPath:
          path: ./mdx-service
      - name: mdx-service-opt
        hostPath:
          path: ./mdx-service_opt
      - name: lockss-mdx-data
        persistentVolumeClaim:
          claimName: lockss-mdx-data-pvc
      - name: lockss-mdx-logs
        persistentVolumeClaim:
          claimName: lockss-mdx-logs-pvc
status: {}
