apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: lockss-pywb-service
  name: lockss-pywb-service
spec:
  ports:
  - name: "lockss-pywb-port"
    port: {{PYWB_PORT}}
    targetPort: {{PYWB_DEFAULT_PORT}}
  selector:
    io.kompose.service: lockss-pywb-service
  externalTrafficPolicy: Local
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: lockss-pywb-service
  name: lockss-pywb-data-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
  storageClassName: local-storage
  selector:
    matchLabels:
      usage: "lockss-pywb-data"
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: lockss-pywb-service
  name: lockss-pywb-logs-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
  storageClassName: local-storage
  selector:
    matchLabels:
      usage: "lockss-pywb-logs"
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: lockss-pywb-service
  name: lockss-pywb-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: lockss-pywb-service
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/lockss-stack-network: "true"
        io.kompose.service: lockss-pywb-service
    spec:
      containers:
      - env:
        - name: ARGS_ADDITIONAL
          value: $(ARGS_ADDITIONAL)
        - name: LOCKSS_WAIT_FOR_200
          value: {{REPO_HOST}}:{{REPO_DEFAULT_REST_PORT}}
        - name: LOCKSS_WAIT_FOR_PORT
          value: {{REPO_HOST}}:{{REPO_DEFAULT_REST_PORT}}
        - name: REPO_HOST
          value: {{REPO_HOST}}
        - name: REPO_REST_PORT
          value: '{{REPO_DEFAULT_REST_PORT}}'
        - name: TZ
          value: {{LOCKSS_TIMEZONE}}
        image: {{PYWB_IMG}}:{{PYWB_VERSION}}
        name: lockss-pywb-service
        ports:
        - containerPort: {{PYWB_DEFAULT_PORT}}
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets/lockss-auth
          name: lockss-auth
        - mountPath: /data
          name: lockss-pywb-data
      restartPolicy: Always
      volumes:
      - name: lockss-auth
        secret:
          items:
          - key: lockss-auth
            path: lockss-auth
          secretName: lockss-auth
      - name: lockss-pywb-data
        persistentVolumeClaim:
          claimName: lockss-pywb-data-pvc
status: {}
