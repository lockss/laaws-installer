apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: lockss-repository-service
  name: lockss-repository-service
spec:
  ports:
  - name: "lockss-repo-rest-port"
    port: {{REPO_REST_PORT}}
    targetPort: {{REPO_DEFAULT_REST_PORT}}
  selector:
    io.kompose.service: lockss-repository-service
  externalTrafficPolicy: Local
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: lockss-repository-service
  name: lockss-repo-logs-pvc
spec:
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Mi
  storageClassName: local-storage
  selector:
    matchLabels:
      usage: "lockss-repo-logs"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: lockss-repository-service
  name: lockss-repo-data-pvc
spec:
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Mi
  storageClassName: local-storage
  selector:
    matchLabels:
      usage: "lockss-repo-data"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: lockss-repository-service
  name: lockss-repository-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: lockss-repository-service
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/lockss-stack-network: "true"
        io.kompose.service: lockss-repository-service
    spec:
      containers:
      - env:
        - name: ARGS_ADDITIONAL
          value: $(ARGS_ADDITIONAL)
        - name: LOCKSS_ADMIN_USER
          value: {{LOCKSS_ADMIN_USER}}
        - name: LOCKSS_CONFIG_URL
          value: {{CFG_URL}}
        - name: LOCKSS_IS_REPO
          value: "true"
        - name: LOCKSS_JMS_HOST
          value: "{{JMS_HOST}}"
        - name: LOCKSS_JMS_PORT
          value: "{{JMS_DEFAULT_PORT}}"
        - name: LOCKSS_PRESERVATION_GROUP
          value: {{LOCKSS_PRESERVATION_GROUP}}
        - name: LOCKSS_SOLR_HOST
          value: {{SOLR_HOST}}
        - name: LOCKSS_SOLR_PORT
          value: "{{SOLR_DEFAULT_PORT}}"
        - name: LOCKSS_WAIT_FOR_PORT
          value: {{SOLR_HOST}}:{{SOLR_DEFAULT_PORT}}
        - name: TZ
          value: {{LOCKSS_TIMEZONE}}
        image: {{REPO_IMG}}:{{REPO_VERSION}}
        name: lockss-repository-service
        ports:
        - containerPort: {{REPO_DEFAULT_REST_PORT}}
        volumeMounts:
        - mountPath: /run/configs/lockss.properties
          name: repo-properties
          subPath: lockss.properties
        - mountPath: /run/configs/lockss_bootstrap
          name: lockss-bootstrap
          subPath: lockss_bootstrap
        - mountPath: /run/configs/lockss_service
          name: repo-service
          subPath: lockss_service
        - mountPath: /run/configs/lockss_service_opt
          name: repo-service-opt
          subPath: lockss_service_opt
        - mountPath: /run/secrets/lockss-ui-pass
          name: lockss-ui-pass
          subPath: lockss-ui-pass
          readOnly: true
        - mountPath: /run/secrets/lockss-auth
          name: lockss-auth
          subPath: lockss-auth
          readOnly: true
        - mountPath: /data
          name: lockss-repo-data
        - mountPath: /var/log/lockss
          name: lockss-repo-logs
      restartPolicy: Always
      volumes:
      - configMap:
          items:
          - key: repo-properties
            path: lockss.properties
          name: repo-properties
        name: repo-properties
      - configMap:
          items:
          - key: lockss-bootstrap
            path: lockss_bootstrap
          name: lockss-bootstrap
        name: lockss-bootstrap
      - configMap:
          items:
          - key: repo-service
            path: lockss_service
          name: repo-service
        name: repo-service
      - configMap:
          items:
          - key: repo-service-opt
            path: lockss_service_opt
          name: repo-service-opt
        name: repo-service-opt
      - name: lockss-ui-pass
        secret:
          items:
          - key: lockss-ui-pass
            path: lockss-ui-pass
          secretName: lockss-ui-pass
      - name: lockss-auth
        secret:
          items:
          - key: lockss-auth
            path: lockss-auth
          secretName: lockss-auth
      - name: lockss-repo-data
        persistentVolumeClaim:
          claimName: lockss-repo-data-pvc
      - name: lockss-repo-logs
        persistentVolumeClaim:
          claimName: lockss-repo-logs-pvc
status: {}
