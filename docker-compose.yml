version: '3'
services:
  lockss-configuration-service:
    image: 'lockss/lockss-configuration-service:${CFG_VERSION}'
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
        restart_policy:
          condition: on-failure
    ports:
      - "${CFG_REST_PORT}:${CFG_REST_PORT}"
      - "${CFG_UI_PORT}:${CFG_UI_PORT}"
      - "${JMS_PORT}:${JMS_PORT}"
    command: "${CFG_CMD}"
    links:
      - lockss-repository-service
    volumes:
      - ./config/plugins:/opt/lockss/BOOT-INF/lib
      - ./config/tdbxml:/opt/lockss/config/tdbxml
      - ./config/cluster:/opt/lockss/config/cluster
      - ./config/host:/opt/lockss/config/host
      - ./config/lockss-configuration-service:/opt/lockss/config/lockss-configuration-service
      - ./storage/lockss-configuration-service:/opt/lockss/storage
      - ./logs/lockss-configuration-service:/opt/lockss/logs

  lockss-metadata-service:
    image: lockss/lockss-metadata-service:${MDQ_VERSION}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
        restart_policy:
          condition: on-failure
    ports:
      - "${MDQ_REST_PORT}:${MDQ_REST_PORT}"
      - "${MDQ_UI_PORT}:${MDQ_UI_PORT}"
    command: "${MDQ_CMD}"
    links:
      - lockss-configuration-service
      - lockss-metadata-pgsql
    volumes:
      - ./config/plugins:/opt/lockss/BOOT-INF/lib
      - ./config/cluster:/opt/lockss/config/cluster
      - ./config/host:/opt/lockss/config/host
      - ./config/lockss-metadata-service:/opt/lockss/config/lockss-metadata-service
      - ./storage/lockss-metadata-service:/opt/lockss/storage
      - ./logs/lockss-metadata-service:/opt/lockss/logs

  lockss-metadata-extraction-service:
    image: lockss/lockss-metadata-extraction-service:${MDX_VERSION}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
        restart_policy:
          condition: on-failure
    ports:
      - ${MDX_REST_PORT}:${MDX_REST_PORT}
      - ${MDX_UI_PORT}:${MDX_UI_PORT}
    command: "${MDX_CMD}"
    links:
      - lockss-configuration-service
      - lockss-metadata-pgsql
    volumes:
      - ./config/plugins:/opt/lockss/BOOT-INF/lib
      - ./config/cluster:/opt/lockss/config/cluster
      - ./config/host:/opt/lockss/config/host
      - ./config/lockss-metadata-extraction-service:/opt/lockss/config/lockss-metadata-extraction-service
      - ./storage/lockss-metadata-extraction-service:/opt/lockss/storage
      - ./logs/lockss-metadata-extraction-service:/opt/lockss/logs

  lockss-metadata-pgsql:
    image: postgres:9.6
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.1'
          memory: 50M
        restart_policy:
          condition: on-failure
    ports:
      - '${PGSQL_PORT}:${PGSQL_PORT}'
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB

  lockss-poller:
    image: lockss/lockss-poller:${POL_VERSION}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
        restart_policy:
          condition: on-failure
    ports:
      - ${POL_REST_PORT}:${POL_REST_PORT}
      - ${POL_UI_PORT}:${POL_UI_PORT}
    command: "${POL_CMD}"
    links:
      - lockss-configuration-service
    volumes:
      - ./config/plugins:/opt/lockss/BOOT-INF/lib
      - ./config/cluster:/opt/lockss/config/cluster
      - ./config/host:/opt/lockss/config/host
      - ./config/lockss-poller:/opt/lockss/config/lockss-poller
      - ./storage/lockss-poller:/opt/lockss/storage
      - ./logs/lockss-poller:/opt/lockss/logs

  lockss-repository-service:
    image: lockss/lockss-repository-service:${REPO_VERSION}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
        restart_policy:
          condition: on-failure
    ports:
      - ${REPO_REST_PORT}:${REPO_REST_PORT}
    command: "${REPO_CMD}"
    environment:
      - "JVM_ARGS=${REPO_JARGS}"
      - REPO_MAX_WARC_SIZE
      - SOLR_HOST
      - SOLR_PORT
      - HDFS_HOST
      - HDFS_FSMD
    links:
      - lockss-solr
      - lockss-hdfs
    volumes:
      - ./config/lockss-repository-service:/opt/lockss/config/lockss-repository-service

  lockss-solr:
    image: lockss/lockss-solr
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
        restart_policy:
          condition: on-failure
    ports:
      - "${SOLR_PORT}:${SOLR_PORT}"
    command: "${SOLR_CMD}"

  lockss-hdfs:
    image: lockss/lockss-dev-hdfs
    ports:
      - "${HDFS_FSMD}:${HDFS_FSMD}"
      - "${HDFS_DATA}:${HDFS_DATA}"
      - "${HDFS_MD}:${HDFS_MD}"
      - "${HDFS_STATUI}:${HDFS_STATUI}"
      - "${HDFS_DNUI}:${HDFS_DNUI}"
    environment:
      - HDFS_HOST
      - HDFS_FSMD
      - HDFS_DATA
      - HDFS_MD
      - HDFS_STATUI
      - HDFS_DNUI
    volumes:
      - ./config/lockss-hdfs/etc/hadoop:/hadoop/etc/hadoop.custom

  lockss-pywb:
    image: lockss/lockss-pywb
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
        restart_policy:
          condition: on-failure
    ports:
      - "${PYWB_URL_PORT}:${PYWB_URL_PORT}"
    links:
      - lockss-hdfs
    environment:
      - HDFS_HOST
      - HDFS_FSMD
      - REPO_BASEDIR
      - PYWB_URL_PORT
      - PYWB_URL_HOST
      - PYWB_COLLECTION
      - PYWB_BASEDIR
      - PYWB_HDFSMNT
      - PYWB_WATCHDIR
    devices:
      - /dev/fuse
    cap_add:
      - SYS_ADMIN
    volumes:
    - lockssvol:/config/lockss-pywb/config.yaml:/webarchive/config.yaml

  lockss-edina-indexer:
    image: lockss/lockss-edina-indexer
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
        restart_policy:
          condition: on-failure
    links:
      - lockss-solr
      - lockss-hdfs
    environment:
      - HDFS_HOST
      - HDFS_FSMD
      - REPO_BASEDIR
      - LOCKSS_SOLR_HDFSMNT
      - LOCKSS_SOLR_WATCHDIR
      - LOCKSS_SOLR_WATCHDIR_INTERVAL
      - LOCKSS_SOLR_URL
    devices:
      - /dev/fuse
    cap_add:
      - SYS_ADMIN
  volumes:
    lockssvol:
      external: true
      name: "${LOCKSS_VOLUME}"