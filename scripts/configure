#!/usr/local/bin/zsh
# ---------------------------------------------------------------------------
# configure - Collect host system information needed to run a LOCKSS stack

# Copyright 2019,  <clairetg@stanfod.edu>
# All rights reserved.

# Usage: configure [-h|--help] [-v] [-c 1]

# Revision history:
# 2019-04-18 Created by new_script.sh ver. 3.3
# ---------------------------------------------------------------------------

PROGNAME=${0##*/}
VERSION="0.1"

clean_up() { # Perform pre-exit housekeeping
	return
}

error_exit() {
	echo -e "${PROGNAME}: ${1:-"Unknown Error"}" >&2
	clean_up
	exit 1
}

graceful_exit() {
	clean_up
	exit
}

signal_exit() { # Handle trapped signals
	case $1 in
		INT)
			error_exit "Program interrupted by user" ;;
		TERM)
			echo -e "\n$PROGNAME: Program terminated" >&2
			graceful_exit ;;
		*)
			error_exit "$PROGNAME: Terminating on unknown signal" ;;
	esac
}

usage() {
	echo -e "Usage: $PROGNAME [-h|--help] [-v|--verbose] [-s <num>]"
}

help_message() {
  cat <<- _EOF_
  $PROGNAME ver. $VERSION
  Collect host system information needed to run LOCKSS stack.

  $(usage)

  Options:
  -h, --help  Display this help message and exit.
  -v, --verbose Output detailed messages during processing.
  -s, --stacks <num>  The number stacks to configure.
    Where 'num' is a postive integer [1-9], default is 1.
_EOF_
  return
}

# Trap signals
trap "signal_exit TERM" TERM HUP
trap "signal_exit INT"  INT



# Parse command-line
while [[ -n $1 ]]; do
  case $1 in
    -h | --help)
      help_message; graceful_exit ;;
    -v | --verbose)
      echo "Output detailed messages during processing." ;;
    -s | --stacks)
      echo "The number of stacks to configure."; shift; STACKS="$1" ;;
    -* | --*)
      usage
      error_exit "Unknown option $1" ;;
    *)
      echo "Argument $1 to process..." ;;
  esac
  shift
done

# Main logic

graceful_exit

