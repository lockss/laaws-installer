#!/bin/bash
# ---------------------------------------------------------------------------
# shutdown-lockss - Stop LOCKSS stack and containers.
#
# Copyright (c) 2000-2018, Board of Trustees of Leland Stanford Jr. University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Usage: shutdown-lockss [-h|--help]
#
# Revision history:
# 2019-04-18 version 1
# ---------------------------------------------------------------------------
PROGNAME=${0##*/}
VERSION="1.0"

_0=$(basename "${0}")
_D0=$(dirname "${0}")

COMPOSE_DIR="$(cd "${_D0}/.." >/dev/null 2>&1 && pwd)"
echo "Setting Compose Dir: ${COMPOSE_DIR}"
CONFIG_DIR="${COMPOSE_DIR}/config"
DOCKER_CONFIGS_DIR="${CONFIG_DIR}/configs"

STACK_PREFIX="lockss-stack"
alias kubectl='microk8s kubectl'

clean_up() { # Perform pre-exit housekeeping
  return
}

error_exit() {
  echo -e "${PROGNAME}: ${1:-"Unknown Error"}" >&2
  clean_up
  exit 1
}

graceful_exit() {
  clean_up
  exit
}

signal_exit() { # Handle trapped signals
  case $1 in
  INT)
    error_exit "Program interrupted by user"
    ;;
  TERM)
    echo -e "\n$PROGNAME: Program terminated" >&2
    graceful_exit
    ;;
  *)
    error_exit "$PROGNAME: Terminating on unknown signal"
    ;;
  esac
}

usage() {
  echo -e "Usage: $PROGNAME [-h|--help]"
}

help_message() {
  cat <<-_EOF_
  $PROGNAME ver. $VERSION
  Stop LOCKSS stack and containers.

  $(usage)

  Options:
  -h, --help  Display this help message and exit.

_EOF_
  return
}

##
## Load _util
##

. "${_D0}/_util"

##
## Definitions
##

##
## MAIN
##
# Trap signals
trap "signal_exit TERM" TERM HUP
trap "signal_exit INT" INT

STACK_NUM=0

# Parse command-line
while [[ -n $1 ]]; do
  case $1 in
  -h | --help)
    help_message
    graceful_exit
    ;;
  [1-9])
    STACK_NUM=$1
    ;;
  -*)
    usage
    error_exit "Unknown option $1"
    ;;
  *)
    echo "Argument $1 to process..."
    ;;
  esac
  shift
done

undeploy_stack() {
  local stack=${STACK_PREFIX}$1
  # Source config.info and env.sh
  set -a
  . "${DOCKER_CONFIGS_DIR}/$stack/env.sh"
  set +a
  kubectl config set-context --current --namespace=${LOCKSS_NAMESPACE}
  echo "Removing all servcices for $stack."
  kubectl delete -f "${DOCKER_CONFIGS_DIR}/$stack/svcs" -llockss-stack-id=${stack} --namespace=${LOCKSS_NAMESPACE} &>/dev/null

  echo "Removing all configmaps and secrets for $stack."
  kubectl delete configmaps,secrets -llockss-stack-id=${stack} --namespace=${LOCKSS_NAMESPACE}--namespace=${LOCKSS_NAMESPACE} &>/dev/null
}

# Sanity checks
#Check_Runnable

if [[ ${STACK_NUM} -eq 0 ]]; then
  undeploy_stack ""
else
  undeploy_stack ${STACK_NUM}
fi

graceful_exit
