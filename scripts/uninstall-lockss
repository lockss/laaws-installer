#!/bin/bash

# Copyright (c) 2000-2019, Board of Trustees of Leland Stanford Jr. University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
##
## Relative paths
##

_0=$(basename "${0}")
_D0=$(dirname "${0}")

##
## Load _util
##

. "${_D0}/_util"

##
## Definitions
##


# Remove all stacks and stack info for stacks which match the prefix
remove_matching_stacks()
{
  local prefix=$1

  # Make sure we stop any running service by calling remove all stacks
  echo "Remvoing all lockss stacks..."
  docker stack ls | grep '$prefix' | awk '{print $1}' | xargs docker stack remove

  echo "Stopping and remvoing all lockss containers..."
  docker ps -a | grep '$prefix' | awk '{print $1}' | xargs docker container stop
  docker ps -a | grep '$prefix' | awk '{print $1}' | xargs docker container rm &> /dev/null

  echo "Remvoing all installed lockss config..."
  docker config ls | grep '$prefix' | awk '{print $1}' | xargs docker config rm &> /dev/null
  echo "Remvoing all docker mount points for lockss volumes..."
  docker volume ls | grep '$prefix' | awk '{print $2}' | xargs docker volume remove &> /dev/null
  echo "Remvoing all docker networks for lockss stacks..."
  docker network ls | grep '$prefix' | awk '{print $1}' | xargs docker network remove &> /dev/null
  echo ""
  echo "Successfully undeployed all stacks and removed all installed stack info."
  echo "You will need to install and deploy to run again."
}

##
## MAIN
##

# Sanity checks
Check_Installed 'docker'
Check_Docker
Check_Stack

if [[ $# -eq 0 ]]; then
  echo "Removing all LOCKSS STACKS..."
  remove_matching_stacks "lockss"
else
  remove_matching_stacks "lockss-stack$1"
fi
