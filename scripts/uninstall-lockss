#!/bin/bash
# ---------------------------------------------------------------------------
# uninstall-lockss - Undeploy all stacks and remove all installed stack info..
#
# Copyright (c) 2000-2019, Board of Trustees of Leland Stanford Jr. University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Usage: uninstall-lockss [-h|--help]
#
# Revision history:
# 2019-04-18 version 1
# ---------------------------------------------------------------------------
PROGNAME=${0##*/}
VERSION="1.0"

##
## Relative paths
##

_0=$(basename "${0}")
_D0=$(dirname "${0}")

##
## Load _util
##

. "${_D0}/_util"

clean_up() { # Perform pre-exit housekeeping
	return
}

error_exit() {
	echo -e "${PROGNAME}: ${1:-"Unknown Error"}" >&2
	clean_up
	exit 1
}

graceful_exit() {
	clean_up
	exit
}

signal_exit() { # Handle trapped signals
	case $1 in
		INT)
			error_exit "Program interrupted by user" ;;
		TERM)
			echo -e "\n$PROGNAME: Program terminated" >&2
			graceful_exit ;;
		*)
			error_exit "$PROGNAME: Terminating on unknown signal" ;;
	esac
}

usage() {
	echo -e "Usage: $PROGNAME [-h|--help]"
}

help_message() {
  cat <<- _EOF_
  $PROGNAME ver. $VERSION
  Undeploy all stacks and remove all installed stack info.

  $(usage)

  Options:
  -h, --help  Display this help message and exit.

_EOF_
  return
}
##
## MAIN
##
# Trap signals
trap "signal_exit TERM" TERM HUP
trap "signal_exit INT"  INT


# Parse command-line
while [[ -n $1 ]]; do
  case $1 in
    -h | --help)
      help_message; graceful_exit ;;
    -* | --*)
      usage
      error_exit "Unknown option $1" ;;
    *)
      echo "Argument $1 to process..." ;;
  esac
  shift
done

# Sanity checks
Check_Installed 'docker'
Check_Docker
Check_Stack

if [[ $# -eq 0 ]]; then
  # Make sure we stop any running service by calling remove all stacks
  echo "Remvoing all lockss stacks..."
  docker stack ls | grep 'lockss-stack' | awk '{print $1}' | xargs docker stack rm

  echo "Stopping and removing all lockss containers..."
  docker ps -a | grep 'lockss' | awk '{print $1}' | xargs docker container stop
  docker ps -a | grep 'lockss' | awk '{print $1}' | xargs docker container rm &> /dev/null

  echo "Removing all installed lockss config..."
  docker config ls | grep 'lockss' | awk '{print $1}' | xargs docker config rm &> /dev/null
  echo "Removing all docker mount points for lockss volumes..."
  docker volume ls | grep 'lockss' | awk '{print $2}' | xargs docker volume rm &> /dev/null
  echo "Removing all docker networks for lockss stacks..."
  docker network ls | grep 'lockss' | awk '{print $1}' | xargs docker network rm &> /dev/null
  echo ""
  echo "Successfully undeployed all stacks and removed all installed stack info."
  echo "You will need to rerun assemble-lockss and deploy-lockss to run again."
fi

graceful_exit
