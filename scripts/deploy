#!/bin/bash

# Copyright (c) 2000-2019, Board of Trustees of Leland Stanford Jr. University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission. 
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
##
## Relative paths
##

_0=$(basename "${0}")
_D0=$(dirname "${0}")

##
## Load _util
##

. "${_D0}/_util"

##
## Definitions
##

# Directories
COMPOSE_DIR="${_D0}/.."
CONFIG_DIR="${COMPOSE_DIR}/config"
DOCKER_CONFIGS_DIR="${CONFIG_DIR}/configs"
TEMPLATES_DIR="${CONFIG_DIR}/templates"

# Files
DOCKER_COMPOSE_FILE="${COMPOSE_DIR}/docker-compose.yml"
PYWB_COMPOSE_FILE="${COMPOSE_DIR}/pywb-docker-compose.yml"
ENV_FILE="${CONFIG_DIR}/env.sh"
EMPTY_LOCKSS_TXT="${TEMPLATES_DIR}/blank_lockss.txt"
EMPTY_LOCKSS_OPT="${TEMPLATES_DIR}/blank_lockss.opt"

#Data
declare -a arr svcs=( "cfg" "mdq" "mdx" "pol" "repo" "postgres" "solr" "hdfs" "pywb")
declare -a arr global_confs=("lockss_cluster" "lockss_bootstrap" "repo_properties")
declare -a arr service_confs=("cfg" "mdq" "mdx" "pol")

##
## MAIN
##

# Source config.info and env.sh
set -a
. "${CONFIG_DIR}/config.info"
. "${ENV_FILE}"
set +a

# Sanity checks
Check_Installed 'docker'
Check_Docker
Check_Stack
Check_LocalPersistPlugin

# Check our secrets
echo "checking installed secret..."

Check_Secret 'postgres_pass'
Check_Secret 'ui_pass'

# Check the global configs
for gconf in "${global_confs[@]}"
do
 echo "checking installed configs for ${gconf}..."
 Check_Config ${gconf}
done

# Check the configs for each lockss service
for sconf in "${service_confs[@]}"
do
  echo "checking installed configs for ${sconf}..."
  Check_Config ${sconf}_service
  Check_Config ${sconf}_service_opt
done

# Check the mountpoints
for svc in "${svcs[@]}"
do
  echo "checking docker mountpoints for ${svc}..."
  Check_Volume lockss-${svc}-data
  Check_Volume lockss-${svc}-logs
done

docker stack deploy --prune --compose-file ${DOCKER_COMPOSE_FILE} lockss-stack
. "${_D0}/run_pywb"