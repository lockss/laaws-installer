#!/bin/bash
# ---------------------------------------------------------------------------
# restart-lockss - "Restart the running LOCKSS stack."
# Copyright (c) 2019, Board of Trustees of Leland Stanford Jr. University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Usage: restart-lockss [-h|--help] [-u|--update] [-a|--args ARGS_ADDITIONAL]
# Revision history:
# ---------------------------------------------------------------------------
PROGNAME=${0##*/}
VERSION="1.0"

#
## Relative paths
##
_0=$(basename "${0}")
_D0=$(dirname "${0}")

##
## Load _util
##

. "${_D0}/_util"

UPDATE_ARG=""

clean_up() { # Perform pre-exit housekeeping
	return
}

error_exit() {
	echo -e "${PROGNAME}: ${1:-"Unknown Error"}" >&2
	clean_up
	exit 1
}

graceful_exit() {
	clean_up
	exit
}

signal_exit() { # Handle trapped signals
	case $1 in
		INT)
			error_exit "Program interrupted by user" ;;
		TERM)
			echo -e "\n$PROGNAME: Program terminated" >&2
			graceful_exit ;;
		*)
			error_exit "$PROGNAME: Terminating on unknown signal" ;;
	esac
}

usage() {
	echo -e "Usage: $PROGNAME [-h|--help] [-u|--update] [-a|--args ARGS_ADDITIONAL]"
}

help_message() {
  cat <<- _EOF_
  $PROGNAME ver. $VERSION
  "Restart a running LOCKSS stack."

  $(usage)

  Options:
  -h, --help  Display this help message and exit.
  -u, --update  force update of LOCKSS docker images
  -a, --args ARGS_ADDITIONAL  Add additional runtime options."
    Where 'ARGS_ADDITIONAL' are the arguments.

_EOF_
  return
}

# Trap signals
trap "signal_exit TERM" TERM HUP
trap "signal_exit INT"  INT


ARGS_ADDITIONAL=""
# Parse command-line
while [[ -n $1 ]]; do
  case $1 in
    -h | --help)
      help_message; graceful_exit ;;
    -u | --update)
      UPDATE_ARG="-u"
      msg "Forcing update of LOCKSS docker images"
      ;;
    -a | --args)
      shift
      export ARGS_ADDITIONAL="$1"
      echo "Adding additional runtime args $ARGS_ADDITIONAL";
    ;;
    -*)
      usage
      error_exit "Unknown option $1" ;;
    *)
      echo "Argument $1 to process..." ;;
  esac
  shift
done

# Main logic
Check_Runnable

if $(am_i_root); then
  error_exit "This script should not be run as root. Run as the lockss user."
fi


"${SCRIPTS_DIR}"/stop-lockss &&
if [ -n "${UPDATE_ARG}" ]; then
  "${SCRIPTS_DIR}"/assemble-lockss ${UPDATE_ARG} &&
  "${SCRIPTS_DIR}"/deploy-lockss -a "$ARGS_ADDITIONAL"
else
  "${SCRIPTS_DIR}"/deploy-lockss -a "$ARGS_ADDITIONAL"
fi

graceful_exit

